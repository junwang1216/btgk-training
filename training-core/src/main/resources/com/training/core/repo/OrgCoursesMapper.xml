<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.core.repo.OrgCoursesMapper">
  <resultMap id="BaseResultMap" type="com.training.core.repo.po.OrgCourses">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="courseName" jdbcType="VARCHAR" property="courseName" />
    <result column="sportId" jdbcType="INTEGER" property="sportId" />
    <result column="courseNote" jdbcType="VARCHAR" property="courseNote" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
    <result column="updateTime" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, courseName, sportId, courseNote, status, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from org_courses
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from org_courses
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" parameterType="com.training.core.repo.po.OrgCourses">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into org_courses (courseName, sportId, courseNote, status, createTime, updateTime)
    values (#{courseName,jdbcType=VARCHAR}, #{sportId,jdbcType=INTEGER}, #{courseNote,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
  <update id="setCourseStatus" useGeneratedKeys="true" parameterType="com.training.core.repo.po.OrgCourses">
    update org_courses
    set status = #{status,jdbcType=INTEGER},
    updateTime = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" useGeneratedKeys="true" parameterType="com.training.core.repo.po.OrgCourses">
    update org_courses
    set courseName = #{courseName,jdbcType=VARCHAR},
      sportId = #{sportId,jdbcType=INTEGER},
      courseNote = #{courseNote,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from org_courses
    where 1 = 1
    <if test="courseName != null">
      and courseName LIKE CONCAT('%',#{courseName,jdbcType=INTEGER},'%')
    </if>
    <if test="sportId != null and sportId != 0">
      and sportId = #{sportId,jdbcType=INTEGER}
    </if>
    <if test="status != null and status != 0">
      and status = #{status,jdbcType=INTEGER}
    </if>
    order by updateTime desc
    limit #{start}, #{pageSize}
  </select>
  <select id="queryAllCount" resultType="java.lang.Integer">
    select count(*)
    from org_courses
    where 1 = 1
    <if test="courseName != null">
      and courseName LIKE CONCAT('%',#{courseName,jdbcType=INTEGER},'%')
    </if>
    <if test="sportId != null and sportId != 0">
      and sportId = #{sportId,jdbcType=INTEGER}
    </if>
    <if test="status != null and status != 0">
      and status = #{status,jdbcType=INTEGER}
    </if>
    order by updateTime desc
  </select>
</mapper>