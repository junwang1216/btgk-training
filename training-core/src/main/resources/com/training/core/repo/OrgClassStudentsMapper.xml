<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.core.repo.OrgClassStudentsMapper">
  <resultMap id="BaseResultMap" type="com.training.core.repo.po.OrgClassStudents">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classId" jdbcType="INTEGER" property="classId" />
    <result column="studentId" jdbcType="INTEGER" property="studentId" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, classId, studentId, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from org_class_students
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from org_class_students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.training.core.repo.po.OrgClassStudents">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into org_class_students (classId, studentId, createTime
      )
    values (#{classId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <delete id="delete" parameterType="com.training.core.repo.po.OrgClassStudents">
    delete from org_class_students
    where classId = #{classId,jdbcType=INTEGER} and studentId = #{studentId,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKey" parameterType="com.training.core.repo.po.OrgClassStudents">
    update org_class_students
    set classId = #{classId,jdbcType=INTEGER},
      studentId = #{studentId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryOrgClassStudentsList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from org_class_students
    where 1 = 1
    <if test="classId != null and classId != 0">
      and classId = #{classId,jdbcType=INTEGER}
    </if>
    <if test="studentId != null and studentId != 0">
      and studentId = #{studentId,jdbcType=INTEGER}
    </if>
    <if test="studentId != null and studentId != 0">
      group by classId
    </if>
  </select>
  <select id="totalAllStudentsCount" resultType="java.lang.Integer">
    select count(distinct(studentId))
    from org_class_students
    where 1 = 1
    <if test="startTime != null">
      and createTime &gt;= #{startTime,jdbcType=VARCHAR}
    </if>
    <if test="endTime != null">
      and createTime &lt;= #{endTime,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>