<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.core.repo.OrgRolesMapper">
  <resultMap id="BaseResultMap" type="com.training.core.repo.po.OrgRoles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
    <result column="roleNote" jdbcType="VARCHAR" property="roleNote" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
    <result column="updateTime" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, roleName, roleNote, status, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from org_roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from org_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" parameterType="com.training.core.repo.po.OrgRoles">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into org_roles (roleName, roleNote, status, createTime, updateTime)
    values (#{roleName,jdbcType=VARCHAR}, #{roleNote,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" useGeneratedKeys="true" parameterType="com.training.core.repo.po.OrgRoles">
    update org_roles
    set roleName = #{roleName,jdbcType=VARCHAR},
      roleNote = #{roleNote,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>